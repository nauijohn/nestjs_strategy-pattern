#!/bin/sh

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

MSG="[HUSKY][PRE-COMMIT]"

# Function to print a message with a border
print_boundary() {
  COLOR=$1
  TEXT=$2
  local CONTENT="${MSG} ${TEXT}"
  local LEN=${#CONTENT}
  local BORDER
  BORDER=$(printf '%*s' "$LEN" '' | tr ' ' '=')

  echo ""
  echo "${COLOR}${BORDER}${NC}"
  printf "${COLOR}%-*s${NC}\n" "$LEN" "$CONTENT"
  echo "${COLOR}${BORDER}${NC}"
}

# Start
print_boundary "$CYAN" "Start"

# Prettier
print_boundary "$YELLOW" "Formatting with Prettier"
if ! pnpm lint-staged; then
  print_boundary "$RED" "Formatting failed ❌"
  exit 1
fi

# Lint (optional)
# print_boundary "$YELLOW" "Linting project"
# if ! pnpm lint; then
#   print_boundary "$RED" "Lint failed ❌"
#   exit 1
# fi

# Build
print_boundary "$YELLOW" "Building project"
if ! pnpm build; then
  print_boundary "$RED" "Build failed ❌"
  exit 1
fi

# Unit Tests
print_boundary "$YELLOW" "Testing project"
if ! pnpm test; then
  print_boundary "$RED" "Tests failed ❌"
  exit 1
fi

# E2E Tests
print_boundary "$YELLOW" "Running E2E tests"
if ! pnpm test:e2e; then
  print_boundary "$RED" "E2E tests failed ❌"
  exit 1
fi

# Done
print_boundary "$GREEN" "All checks passed ✅"
